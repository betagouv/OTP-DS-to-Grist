[project]
name = "otp-ds-to-grist"
version = "0.1.0"
description = "Ce projet permet de synchroniser plusieurs démarches Démarches Simplifiées vers différents documents Grist avec des paramètres de filtrage spécifiques à chaque démarche."
authors = [
    {name = "tarik.amar@multi.coop"}
]
readme = "README.md"
requires-python = ">=3.12,<4.0"
dependencies = [
    "flask (==2.3.3)",
    "flask-socketio (==5.3.6)",
    "python-dotenv (==1.0.0)",
    "requests (>=2.32.4)",
    "python-socketio (>=5.14.0)",
    "eventlet (>=0.40.3)",
    "gevent (==25.8.2)",
    "python-dateutil (==2.8.2)",
    "gunicorn (>=23.0.0,<24.0.0)",
    "cryptography (>=44.0.1)",
    "psycopg2-binary (>=2.9.0,<3.0.0)",
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = false

[tool.poetry.group.dev.dependencies]
commitizen = "^4.8.4"
poethepoet = "^0.37.0"
pytest = "^7.0.0"

[tool.poe.tasks.dev]
shell = "python app.py"

[tool.poe.tasks.test]
shell = "pytest"

[tool.poe.tasks.generate-secret]
help = "Génère une clé secrète sécurisée pour Flask"
shell = "python3 -c \"import secrets; print('FLASK_SECRET_KEY=' + secrets.token_hex(32))\""

[tool.poe.tasks.generate-encryption-key]
help = "Génère une clé secrète de cryptage"
shell = "python3 -c \"import secrets, base64; print('ENCRYPTION_KEY=' + base64.urlsafe_b64encode(secrets.token_bytes(32)).decode())\""

